;# SCRIPT
; Anums=(-8388608 -8388607 -8388606 -8388605 -4 -3 -2 -1 0 1 2 3 4 8388604 8388605  8388606  8388607)
; for A in "${Anums[@]}"; do
;    if (( A <= 0 )); then echo -n "T"; else echo -n "f"; fi
; done
;# END

        .include MACROS.inc
        .org 0
Z:      .data 0 
PLUS1:  .data 1 
MINUS1: .data (-1)

; JMPLE0 v addr    ; Jump to addr if v is less than or equal to zero ( <=0 )

        MOV stack_ SP                              ; Initialize the stack pointer
        MOV TESTNUMS_ p

loop:   INDEXEDRD p v
        CMPEQ CONST_END v done

        JMPLE0 v ok
        
        OUT ASCII_f
        JMP incs
ok:     OUT ASCII_T
incs:   INC p
        JMP loop

done:   PRINTCRLF
        HALT

CONST_END:  .data 0x650318
TESTNUMS_:  .data TESTNUMS
TESTNUMS:   .data -8388608,-8388607,-8388606,-8388605,-4,-3,-2,-1,0,1,2,3,4,8388604,8388605,8388606,8388607
            .data 0x650318

p:              .data 0
v:              .data 0



P1:         .data 1
P2:         .data 2
P3:         .data 3
P4:         .data 4
P5:         .data 5
P6:         .data 6
P10:        .data 10
P100:       .data 100
P1000:      .data 1000
P10000:     .data 10000
P100000:    .data 100000
P1000000:   .data 1000000
ZERO:       .data 0
M1:         .data -1
M2:         .data -2
M3:         .data -3
M4:         .data -4
M5:         .data -5
M6:         .data -6
M10:        .data -10
M100:       .data -100
M1000:      .data -1000
M10000:     .data -10000
M100000:    .data -100000
M1000000:   .data -1000000



A:          .data 0              ; test variable
B:          .data 0              ; test variable
T:          .data 0
tmpA:       .data 0             ;Used by macros
tmpB:       .data 0             ;Used by macros
tmpC:       .data 0             ;Used by macros

        .include IO.inc
        .include CONSTANTS.inc
        .include STACK.inc

