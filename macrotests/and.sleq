;# SCRIPT
; Anums=(5393303 12559298 1703788 12424365 11622155 14923334 15408390 9085095 14787526 4565281 2288085 15545218 176857 13767412 14691199 13452486 5716230 10696868 10770738 4608131)
; Bnums=(0x000000 0x00000F 0xF00000 0xFFFFFF 0x555555 0xAAAAAA)
; for B in "${Bnums[@]}"; do
;   for A in "${Anums[@]}"; do
;     printf "%06X " "$((A & B))"
;   done
; done
; echo ""
;# END


    .include MACROS.inc

    .macro testAND num
        PUSH CONST_5393303 
        PUSH num
        CALL AND
        PUSH result
        CALL PrintHex
        OUT ASCII_SPACE

        PUSH CONST_12559298
        PUSH num
        CALL AND
        PUSH result
        CALL PrintHex
        OUT ASCII_SPACE

        PUSH CONST_1703788 
        PUSH num
        CALL AND
        PUSH result
        CALL PrintHex
        OUT ASCII_SPACE

        PUSH CONST_12424365
        PUSH num
        CALL AND
        PUSH result
        CALL PrintHex
        OUT ASCII_SPACE

        PUSH CONST_11622155
        PUSH num
        CALL AND
        PUSH result
        CALL PrintHex
        OUT ASCII_SPACE

        PUSH CONST_14923334
        PUSH num
        CALL AND
        PUSH result
        CALL PrintHex
        OUT ASCII_SPACE

        PUSH CONST_15408390
        PUSH num
        CALL AND
        PUSH result
        CALL PrintHex
        OUT ASCII_SPACE

        PUSH CONST_9085095 
        PUSH num
        CALL AND
        PUSH result
        CALL PrintHex
        OUT ASCII_SPACE

        PUSH CONST_14787526
        PUSH num
        CALL AND
        PUSH result
        CALL PrintHex
        OUT ASCII_SPACE

        PUSH CONST_4565281 
        PUSH num
        CALL AND
        PUSH result
        CALL PrintHex
        OUT ASCII_SPACE

        PUSH CONST_2288085 
        PUSH num
        CALL AND
        PUSH result
        CALL PrintHex
        OUT ASCII_SPACE

        PUSH CONST_15545218
        PUSH num
        CALL AND
        PUSH result
        CALL PrintHex
        OUT ASCII_SPACE

        PUSH CONST_176857  
        PUSH num
        CALL AND
        PUSH result
        CALL PrintHex
        OUT ASCII_SPACE

        PUSH CONST_13767412
        PUSH num
        CALL AND
        PUSH result
        CALL PrintHex
        OUT ASCII_SPACE

        PUSH CONST_14691199
        PUSH num
        CALL AND
        PUSH result
        CALL PrintHex
        OUT ASCII_SPACE

        PUSH CONST_13452486
        PUSH num
        CALL AND
        PUSH result
        CALL PrintHex
        OUT ASCII_SPACE

        PUSH CONST_5716230 
        PUSH num
        CALL AND
        PUSH result
        CALL PrintHex
        OUT ASCII_SPACE

        PUSH CONST_10696868
        PUSH num
        CALL AND
        PUSH result
        CALL PrintHex
        OUT ASCII_SPACE

        PUSH CONST_10770738
        PUSH num
        CALL AND
        PUSH result
        CALL PrintHex
        OUT ASCII_SPACE

        PUSH CONST_4608131 
        PUSH num
        CALL AND
        PUSH result
        CALL PrintHex
        OUT ASCII_SPACE
    .endm

        .org 0

Z:          .data 0 
PLUS1:      .data 1 
MINUS1:     .data (-1)


        MOV stack_ SP                              ; Initialize the stack pointer

        testAND CONST_x000000 
        testAND CONST_x00000F 
        testAND CONST_xF00000 
        testAND CONST_xFFFFFF 
        testAND CONST_x555555 
        testAND CONST_xAAAAAA

        PRINTCRLF
        HALT


result:     .data 0
tmpA:       .data 0             ;Used by macros
tmpB:       .data 0             ;Used by macros
tmpC:       .data 0             ;Used by macros



CONST_x000000:  .data 0x000000
CONST_x00000F:  .data 0x00000F
CONST_xF00000:  .data 0xF00000
CONST_xFFFFFF:  .data 0xFFFFFF
CONST_x555555:  .data 0x555555
CONST_xAAAAAA:  .data 0xAAAAAA

CONST_5393303:   .DATA 5393303
CONST_12559298:  .DATA 12559298
CONST_1703788:   .DATA 1703788
CONST_12424365:  .DATA 12424365
CONST_11622155:  .DATA 11622155
CONST_14923334:  .DATA 14923334
CONST_15408390:  .DATA 15408390
CONST_9085095:   .DATA 9085095
CONST_14787526:  .DATA 14787526
CONST_4565281:   .DATA 4565281
CONST_2288085:   .DATA 2288085
CONST_15545218:  .DATA 15545218
CONST_176857:    .DATA 176857
CONST_13767412:  .DATA 13767412
CONST_14691199:  .DATA 14691199
CONST_13452486:  .DATA 13452486
CONST_5716230:   .DATA 5716230
CONST_10696868:  .DATA 10696868
CONST_10770738:  .DATA 10770738
CONST_4608131:   .DATA 4608131

P1:         .data 1
P2:         .data 2
P3:         .data 3
P4:         .data 4
P5:         .data 5
P6:         .data 6
P16:        .data 16
P10:        .data 10
P100:       .data 100
P1000:      .data 1000
P10000:     .data 10000
P100000:    .data 100000
P1000000:   .data 1000000
ZERO:       .data 0
M1:         .data -1
M2:         .data -2
M3:         .data -3
M4:         .data -4
M5:         .data -5
M6:         .data -6
M10:        .data -10
M100:       .data -100
M1000:      .data -1000
M10000:     .data -10000
M100000:    .data -100000
M1000000:   .data -1000000

        .INCLUDE BITOPS.inc
        .include IO.inc
        .include CONSTANTS.inc
        .include STACK.inc
