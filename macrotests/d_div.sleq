;# SCRIPT
; Anums=(-222 -12467 -7404 -87553 -73163 -17039 -2729089 200 15467 17404 82553 93163 18039 2829089)
; Bnums=(-1 -2 -3 -10 -13 -100 -214 -396 -515 -644 -1000 -6821 -22639 -88888 1 2 3 10 13 100 214 396 515 644 1000 6821 22639 88888)
; for B in "${Bnums[@]}"; do
;   for A in "${Anums[@]}"; do
;       C=$(( A / B ))
;       echo -n $C" "
;    done
;done
;# END

        .include MACROS.inc
        .org 0

; DIV a b

        MOV stack_ SP                              ; Initialize the stack pointer

        MOV TESTNUMS2_ po
loop2:  INDEXEDRD po vo
        CMPEQ CONST_END vo done2

        MOV TESTNUMS1_ pi
loop1:  INDEXEDRD pi vi
        CMPEQ CONST_END vi done1

        DIV vo vi

        PUSH vi
        CALL PrintInteger
        OUT ASCII_SPACE
 
cont:   INC pi
        JMP loop1

done1:  INC po
        JMP loop2

done2:  PRINTCRLF
        HALT

Restart:
        HALT


msgDivZeroError: .data $+1, "Error: Division by zero\n",0

CONST_END:   .data 0x650318

TESTNUMS1_:  .data TESTNUMS1
TESTNUMS1:   .data -222,-12467,-7404,-87553,-73163,-17039,-2729089,200,15467,17404,82553,93163,18039,2829089

             .data 0x650318

TESTNUMS2_:  .data TESTNUMS2
TESTNUMS2:   .data -1,-2,-3,-10,-13,-100,-214,-396,-515,-644,-1000,-6821,-22639,-88888,1,2,3,10,13,100,214,396,515,644,1000,6821,22639,88888
             .data 0x650318

divRemainder:  .data 0          ; Remainder from DIV operation to be used for modulus operations

pi:          .data 0
vi:          .data 0
po:          .data 0
vo:          .data 0

tmpA:       .data 0             ;Used by macros
tmpB:       .data 0             ;Used by macros
tmpC:       .data 0             ;Used by macros

T:          .data 0
tokenType:  .data 0     
tokenValue: .data 0
tokenAddr:  .data 0

        .include IO.inc
        .include CONSTANTS.inc
        .include STACK.inc
