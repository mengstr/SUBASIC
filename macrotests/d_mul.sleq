;# SCRIPT
; Anums=(-2895 -888 -777 -666 -5 -4 -3 -2 -1 0 1 2 3 11 17 99 333 2895)
; Bnums=(-2894 -999 -888 -12 -2 -1 0 1 2 13 67 412 977 2894)
; for A in "${Anums[@]}"; do
;   for B in "${Bnums[@]}"; do
;       C=$(( A * B))
;       echo -n $C" "
;    done
;done
;# END

        .include MACROS.inc
        .org 0

; DIV a b

        MOV stack_ SP                              ; Initialize the stack pointer

        MOV TESTNUMSOUTER_ po
loop2:  INDEXEDRD po vo        
        CMPEQ CONST_END vo done2

        MOV TESTNUMSINNER_ pi
loop1:  INDEXEDRD pi vi
        CMPEQ CONST_END vi done1

        MUL vo vi

        PUSH vi
        CALL PrintInteger
        OUT ASCII_SPACE
 
cont:   INC pi
        JMP loop1

done1:  INC po
        JMP loop2

done2:  PRINTCRLF
        HALT

Restart:
        HALT



msgDivZeroError: .data $+1, "Error: Division by zero\n",0

CONST_END:              .data 0x650318

TESTNUMSOUTER_:         .data TESTNUMSOUTER
TESTNUMSOUTER:         .data -2895,-888, -777, -666, -5, -4, -3, -2, -1, 0, 1, 2, 3, 11, 17, 99, 333,2895
                        .data 0x650318

TESTNUMSINNER_:         .data TESTNUMSINNER
TESTNUMSINNER:          .data -2894, -999, -888, -12, -2, -1, 0, 1, 2, 13, 67, 412, 977,2894
                        .data 0x650318

divRemainder:  .data 0          ; Remainder from DIV operation to be used for modulus operations

po:          .data 0
vo:          .data 0
pi:          .data 0
vi:          .data 0

tmpA:       .data 0             ;Used by macros
tmpB:       .data 0             ;Used by macros
tmpC:       .data 0             ;Used by macros

T:          .data 0
tokenType:  .data 0     
tokenValue: .data 0
tokenAddr:  .data 0

        .include IO.inc
        .include CONSTANTS.inc
        .include STACK.inc
