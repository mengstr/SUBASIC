            .include MACROS.inc

; E.XPECT -3_-2_-1_0_1_2_3_-10_-100_-1000_-10000_-100000_-1000000_10_100_1000_10000_100000_1000000_8388607_0

            .org 0

Z:          .data 0 
PLUS1:      .data 1 
MINUS1:     .data (-1)


; Test printing of hex numbers

    MOV stack_ SP                              ; Initialize the stack pointer
    
    MOV CONST_X0 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF
    
    MOV CONST_X1 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF
        
    MOV COMST_X10 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF

    MOV COMST_X11 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF

    MOV COMST_X12 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF

    MOV COMST_X13 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF

    MOV COMST_X14 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF

    MOV COMST_X15 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF

    MOV COMST_X16 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF

    MOV COMST_X17 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF

    MOV COMST_X18 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF

    MOV COMST_X19 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF

    MOV COMST_X1A q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF

    MOV COMST_X1B q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF

    MOV COMST_X1C q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF

    MOV COMST_X1D q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF

    MOV COMST_X1E q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF

    MOV COMST_X1F q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF

    MOV CONST_X100 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF
    
    MOV CONST_X1000 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF
    
    MOV CONST_X10000 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF
    
    MOV CONST_X100000 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF
    
    MOV CONST_X200000 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF
    
    MOV CONST_X300000 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF
    
    MOV CONST_X400000 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF
    
    MOV CONST_X500000 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF
    
    MOV CONST_X600000 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF
    
    MOV CONST_X700000 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF
    
    MOV CONST_X800000 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF
    
    MOV CONST_X900000 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF
    
    MOV CONST_XA00000 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF
    
    MOV CONST_XB00000 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF
    
    MOV CONST_XC00000 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF
    
    MOV CONST_XD00000 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF
    
    MOV CONST_XE00000 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF
    
    MOV CONST_XF00000 q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF
    
    MOV CONST_XFFFFFF q
    PUSH q 
    CALL PrintHex
    OUT ASCII_SPACE
    PUSH q 
    CALL PrintInteger
    PRINTCRLF

    HALT


q:          .data 0 
A:          .data 0              ; test variable
B:          .data 0              ; test variable
T:          .data 0
tmpA:       .data 0             ;Used by macros
tmpB:       .data 0             ;Used by macros
tmpC:       .data 0             ;Used by macros


CONST_X0:           .data 0x0
CONST_X1:           .data 0x1
COMST_X10:          .data 0x10
COMST_X11:          .data 0x11
COMST_X12:          .data 0x12
COMST_X13:          .data 0x13
COMST_X14:          .data 0x14
COMST_X15:          .data 0x15
COMST_X16:          .data 0x16
COMST_X17:          .data 0x17
COMST_X18:          .data 0x18
COMST_X19:          .data 0x19
COMST_X1A:          .data 0x1A
COMST_X1B:          .data 0x1B
COMST_X1C:          .data 0x1C
COMST_X1D:          .data 0x1D
COMST_X1E:          .data 0x1E
COMST_X1F:          .data 0x1F
CONST_X100:         .data 0x100
CONST_X1000:        .data 0x1000
CONST_X10000:       .data 0x10000
CONST_X100000:      .data 0x100000
CONST_X200000:      .data 0x100000
CONST_X300000:      .data 0x300000
CONST_X400000:      .data 0x400000
CONST_X500000:      .data 0x500000
CONST_X600000:      .data 0x600000
CONST_X700000:      .data 0x700000
CONST_X800000:      .data 0x800000
CONST_X900000:      .data 0x900000
CONST_XA00000:      .data 0xA00000
CONST_XB00000:      .data 0xB00000
CONST_XC00000:      .data 0xC00000
CONST_XD00000:      .data 0xD00000
CONST_XE00000:      .data 0xE00000
CONST_XF00000:      .data 0xF00000
CONST_XFFFFFF:      .data 0xFFFFFF


        .include IO.inc
        .include CONSTANTS.inc
        .include STACK.inc

